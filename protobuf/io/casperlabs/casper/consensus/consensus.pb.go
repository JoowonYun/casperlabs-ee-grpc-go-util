// Code generated by protoc-gen-go. DO NOT EDIT.
// source: io/casperlabs/casper/consensus/consensus.proto

package consensus

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	state "github.com/hdac-io/casperlabs-ee-grpc-go-util/protobuf/io/casperlabs/casper/consensus/state"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Block_Role int32

const (
	// Regular block (with deploys, multiple parents etc).
	Block_BLOCK Block_Role = 0
	// A message that doesn't have any deploys,
	// targets one block (no secondary parents),
	// and cannot be used as a parent (is a leaf in the DAG).
	Block_BALLOT Block_Role = 1
)

var Block_Role_name = map[int32]string{
	0: "BLOCK",
	1: "BALLOT",
}

var Block_Role_value = map[string]int32{
	"BLOCK":  0,
	"BALLOT": 1,
}

func (x Block_Role) String() string {
	return proto.EnumName(Block_Role_name, int32(x))
}

func (Block_Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{4, 0}
}

// Signature over for example a deploy or a block. The location of the public key depends
// on the subject; for example if it's a block then the key is actually part of the data
// that needs to be signed over.
type Signature struct {
	// One of the supported algorithms: ed25519, secp256k1
	SigAlgorithm         string   `protobuf:"bytes,1,opt,name=sig_algorithm,json=sigAlgorithm,proto3" json:"sig_algorithm,omitempty"`
	Sig                  []byte   `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{0}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetSigAlgorithm() string {
	if m != nil {
		return m.SigAlgorithm
	}
	return ""
}

func (m *Signature) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

// A signature together with the corresponding public key that can be used to validate it
// for situations where the key is not part of the data being signed, which is usually the
// case where multiple signatures are required.
type Approval struct {
	ApproverPublicKey    []byte     `protobuf:"bytes,1,opt,name=approver_public_key,json=approverPublicKey,proto3" json:"approver_public_key,omitempty"`
	Signature            *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Approval) Reset()         { *m = Approval{} }
func (m *Approval) String() string { return proto.CompactTextString(m) }
func (*Approval) ProtoMessage()    {}
func (*Approval) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{1}
}

func (m *Approval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Approval.Unmarshal(m, b)
}
func (m *Approval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Approval.Marshal(b, m, deterministic)
}
func (m *Approval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Approval.Merge(m, src)
}
func (m *Approval) XXX_Size() int {
	return xxx_messageInfo_Approval.Size(m)
}
func (m *Approval) XXX_DiscardUnknown() {
	xxx_messageInfo_Approval.DiscardUnknown(m)
}

var xxx_messageInfo_Approval proto.InternalMessageInfo

func (m *Approval) GetApproverPublicKey() []byte {
	if m != nil {
		return m.ApproverPublicKey
	}
	return nil
}

func (m *Approval) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

// A smart contract invocation, singed by the account that sent it.
type Deploy struct {
	// blake2b256 hash of the `header`.
	DeployHash []byte         `protobuf:"bytes,1,opt,name=deploy_hash,json=deployHash,proto3" json:"deploy_hash,omitempty"`
	Header     *Deploy_Header `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body       *Deploy_Body   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	// Signatures over `deploy_hash` with either the `account_public_key`, or some other keys in case of
	// multi-sig wallets and account recovery (when the private key corresponding to `account_public_key`
	// is lost.)
	Approvals            []*Approval `protobuf:"bytes,4,rep,name=approvals,proto3" json:"approvals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Deploy) Reset()         { *m = Deploy{} }
func (m *Deploy) String() string { return proto.CompactTextString(m) }
func (*Deploy) ProtoMessage()    {}
func (*Deploy) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{2}
}

func (m *Deploy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deploy.Unmarshal(m, b)
}
func (m *Deploy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deploy.Marshal(b, m, deterministic)
}
func (m *Deploy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deploy.Merge(m, src)
}
func (m *Deploy) XXX_Size() int {
	return xxx_messageInfo_Deploy.Size(m)
}
func (m *Deploy) XXX_DiscardUnknown() {
	xxx_messageInfo_Deploy.DiscardUnknown(m)
}

var xxx_messageInfo_Deploy proto.InternalMessageInfo

func (m *Deploy) GetDeployHash() []byte {
	if m != nil {
		return m.DeployHash
	}
	return nil
}

func (m *Deploy) GetHeader() *Deploy_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Deploy) GetBody() *Deploy_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Deploy) GetApprovals() []*Approval {
	if m != nil {
		return m.Approvals
	}
	return nil
}

type Deploy_Header struct {
	// Identifying the Account is the key used to sign the Deploy.
	AccountPublicKey []byte `protobuf:"bytes,1,opt,name=account_public_key,json=accountPublicKey,proto3" json:"account_public_key,omitempty"`
	// Current time milliseconds.
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Conversion rate between the cost of Wasm opcodes and the motes sent by the `payment_code`.
	GasPrice uint64 `protobuf:"varint,4,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	// Hash of the body structure as a whole.
	BodyHash             []byte   `protobuf:"bytes,5,opt,name=body_hash,json=bodyHash,proto3" json:"body_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Deploy_Header) Reset()         { *m = Deploy_Header{} }
func (m *Deploy_Header) String() string { return proto.CompactTextString(m) }
func (*Deploy_Header) ProtoMessage()    {}
func (*Deploy_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{2, 0}
}

func (m *Deploy_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deploy_Header.Unmarshal(m, b)
}
func (m *Deploy_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deploy_Header.Marshal(b, m, deterministic)
}
func (m *Deploy_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deploy_Header.Merge(m, src)
}
func (m *Deploy_Header) XXX_Size() int {
	return xxx_messageInfo_Deploy_Header.Size(m)
}
func (m *Deploy_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Deploy_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Deploy_Header proto.InternalMessageInfo

func (m *Deploy_Header) GetAccountPublicKey() []byte {
	if m != nil {
		return m.AccountPublicKey
	}
	return nil
}

func (m *Deploy_Header) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Deploy_Header) GetGasPrice() uint64 {
	if m != nil {
		return m.GasPrice
	}
	return 0
}

func (m *Deploy_Header) GetBodyHash() []byte {
	if m != nil {
		return m.BodyHash
	}
	return nil
}

type Deploy_Body struct {
	// Wasm code of the smart contract to be executed.
	Session *Deploy_Code `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	// Wasm code that transfers some motes to the validators as payment in exchange to run the Deploy.
	// Note: the word "mote" means "a tiny piece of a substance". Here we are referring to the smallest,
	// indivisible unit of the CL token. This is the equivalent of a Satoshi on Bitcoin or a Wei on Ethereum.
	Payment              *Deploy_Code `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Deploy_Body) Reset()         { *m = Deploy_Body{} }
func (m *Deploy_Body) String() string { return proto.CompactTextString(m) }
func (*Deploy_Body) ProtoMessage()    {}
func (*Deploy_Body) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{2, 1}
}

func (m *Deploy_Body) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deploy_Body.Unmarshal(m, b)
}
func (m *Deploy_Body) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deploy_Body.Marshal(b, m, deterministic)
}
func (m *Deploy_Body) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deploy_Body.Merge(m, src)
}
func (m *Deploy_Body) XXX_Size() int {
	return xxx_messageInfo_Deploy_Body.Size(m)
}
func (m *Deploy_Body) XXX_DiscardUnknown() {
	xxx_messageInfo_Deploy_Body.DiscardUnknown(m)
}

var xxx_messageInfo_Deploy_Body proto.InternalMessageInfo

func (m *Deploy_Body) GetSession() *Deploy_Code {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *Deploy_Body) GetPayment() *Deploy_Code {
	if m != nil {
		return m.Payment
	}
	return nil
}

// Code (either session or payment) to be deployed to the platform.
// Includes both binary instructions (wasm) and optionally, arguments
// to those instructions encoded via our ABI
type Deploy_Code struct {
	// Types that are valid to be assigned to Contract:
	//	*Deploy_Code_Wasm
	//	*Deploy_Code_Hash
	//	*Deploy_Code_Name
	//	*Deploy_Code_Uref
	Contract isDeploy_Code_Contract `protobuf_oneof:"contract"`
	// Deprecated, use `args` instead.
	AbiArgs []byte `protobuf:"bytes,2,opt,name=abi_args,json=abiArgs,proto3" json:"abi_args,omitempty"`
	// Keyword arguments. Note that while the execution engine works with the original
	// positional argument passing style, the order of the arguments matters.
	Args                 []*Deploy_Arg `protobuf:"bytes,6,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Deploy_Code) Reset()         { *m = Deploy_Code{} }
func (m *Deploy_Code) String() string { return proto.CompactTextString(m) }
func (*Deploy_Code) ProtoMessage()    {}
func (*Deploy_Code) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{2, 2}
}

func (m *Deploy_Code) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deploy_Code.Unmarshal(m, b)
}
func (m *Deploy_Code) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deploy_Code.Marshal(b, m, deterministic)
}
func (m *Deploy_Code) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deploy_Code.Merge(m, src)
}
func (m *Deploy_Code) XXX_Size() int {
	return xxx_messageInfo_Deploy_Code.Size(m)
}
func (m *Deploy_Code) XXX_DiscardUnknown() {
	xxx_messageInfo_Deploy_Code.DiscardUnknown(m)
}

var xxx_messageInfo_Deploy_Code proto.InternalMessageInfo

type isDeploy_Code_Contract interface {
	isDeploy_Code_Contract()
}

type Deploy_Code_Wasm struct {
	Wasm []byte `protobuf:"bytes,1,opt,name=wasm,proto3,oneof"`
}

type Deploy_Code_Hash struct {
	Hash []byte `protobuf:"bytes,3,opt,name=hash,proto3,oneof"`
}

type Deploy_Code_Name struct {
	Name string `protobuf:"bytes,4,opt,name=name,proto3,oneof"`
}

type Deploy_Code_Uref struct {
	Uref []byte `protobuf:"bytes,5,opt,name=uref,proto3,oneof"`
}

func (*Deploy_Code_Wasm) isDeploy_Code_Contract() {}

func (*Deploy_Code_Hash) isDeploy_Code_Contract() {}

func (*Deploy_Code_Name) isDeploy_Code_Contract() {}

func (*Deploy_Code_Uref) isDeploy_Code_Contract() {}

func (m *Deploy_Code) GetContract() isDeploy_Code_Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *Deploy_Code) GetWasm() []byte {
	if x, ok := m.GetContract().(*Deploy_Code_Wasm); ok {
		return x.Wasm
	}
	return nil
}

func (m *Deploy_Code) GetHash() []byte {
	if x, ok := m.GetContract().(*Deploy_Code_Hash); ok {
		return x.Hash
	}
	return nil
}

func (m *Deploy_Code) GetName() string {
	if x, ok := m.GetContract().(*Deploy_Code_Name); ok {
		return x.Name
	}
	return ""
}

func (m *Deploy_Code) GetUref() []byte {
	if x, ok := m.GetContract().(*Deploy_Code_Uref); ok {
		return x.Uref
	}
	return nil
}

func (m *Deploy_Code) GetAbiArgs() []byte {
	if m != nil {
		return m.AbiArgs
	}
	return nil
}

func (m *Deploy_Code) GetArgs() []*Deploy_Arg {
	if m != nil {
		return m.Args
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Deploy_Code) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Deploy_Code_Wasm)(nil),
		(*Deploy_Code_Hash)(nil),
		(*Deploy_Code_Name)(nil),
		(*Deploy_Code_Uref)(nil),
	}
}

type Deploy_Arg struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Note that until the EE doesn't support kwargs directly, missing an Empty values are
	// not allowed because they would be ambiguous.
	Value                *Deploy_Arg_Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Deploy_Arg) Reset()         { *m = Deploy_Arg{} }
func (m *Deploy_Arg) String() string { return proto.CompactTextString(m) }
func (*Deploy_Arg) ProtoMessage()    {}
func (*Deploy_Arg) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{2, 3}
}

func (m *Deploy_Arg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deploy_Arg.Unmarshal(m, b)
}
func (m *Deploy_Arg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deploy_Arg.Marshal(b, m, deterministic)
}
func (m *Deploy_Arg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deploy_Arg.Merge(m, src)
}
func (m *Deploy_Arg) XXX_Size() int {
	return xxx_messageInfo_Deploy_Arg.Size(m)
}
func (m *Deploy_Arg) XXX_DiscardUnknown() {
	xxx_messageInfo_Deploy_Arg.DiscardUnknown(m)
}

var xxx_messageInfo_Deploy_Arg proto.InternalMessageInfo

func (m *Deploy_Arg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Deploy_Arg) GetValue() *Deploy_Arg_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Subset of cases in `state.Value` that can be used as input for contract calls.
type Deploy_Arg_Value struct {
	// Types that are valid to be assigned to Value:
	//	*Deploy_Arg_Value_OptionalValue
	//	*Deploy_Arg_Value_BytesValue
	//	*Deploy_Arg_Value_IntValue
	//	*Deploy_Arg_Value_IntList
	//	*Deploy_Arg_Value_StringValue
	//	*Deploy_Arg_Value_StringList
	//	*Deploy_Arg_Value_LongValue
	//	*Deploy_Arg_Value_BigInt
	//	*Deploy_Arg_Value_Key
	Value                isDeploy_Arg_Value_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Deploy_Arg_Value) Reset()         { *m = Deploy_Arg_Value{} }
func (m *Deploy_Arg_Value) String() string { return proto.CompactTextString(m) }
func (*Deploy_Arg_Value) ProtoMessage()    {}
func (*Deploy_Arg_Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{2, 3, 0}
}

func (m *Deploy_Arg_Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deploy_Arg_Value.Unmarshal(m, b)
}
func (m *Deploy_Arg_Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deploy_Arg_Value.Marshal(b, m, deterministic)
}
func (m *Deploy_Arg_Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deploy_Arg_Value.Merge(m, src)
}
func (m *Deploy_Arg_Value) XXX_Size() int {
	return xxx_messageInfo_Deploy_Arg_Value.Size(m)
}
func (m *Deploy_Arg_Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Deploy_Arg_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Deploy_Arg_Value proto.InternalMessageInfo

type isDeploy_Arg_Value_Value interface {
	isDeploy_Arg_Value_Value()
}

type Deploy_Arg_Value_OptionalValue struct {
	OptionalValue *Deploy_Arg_Value `protobuf:"bytes,1,opt,name=optional_value,json=optionalValue,proto3,oneof"`
}

type Deploy_Arg_Value_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,2,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type Deploy_Arg_Value_IntValue struct {
	IntValue int32 `protobuf:"varint,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

type Deploy_Arg_Value_IntList struct {
	IntList *state.IntList `protobuf:"bytes,4,opt,name=int_list,json=intList,proto3,oneof"`
}

type Deploy_Arg_Value_StringValue struct {
	StringValue string `protobuf:"bytes,5,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Deploy_Arg_Value_StringList struct {
	StringList *state.StringList `protobuf:"bytes,6,opt,name=string_list,json=stringList,proto3,oneof"`
}

type Deploy_Arg_Value_LongValue struct {
	LongValue int64 `protobuf:"varint,7,opt,name=long_value,json=longValue,proto3,oneof"`
}

type Deploy_Arg_Value_BigInt struct {
	BigInt *state.BigInt `protobuf:"bytes,8,opt,name=big_int,json=bigInt,proto3,oneof"`
}

type Deploy_Arg_Value_Key struct {
	Key *state.Key `protobuf:"bytes,9,opt,name=key,proto3,oneof"`
}

func (*Deploy_Arg_Value_OptionalValue) isDeploy_Arg_Value_Value() {}

func (*Deploy_Arg_Value_BytesValue) isDeploy_Arg_Value_Value() {}

func (*Deploy_Arg_Value_IntValue) isDeploy_Arg_Value_Value() {}

func (*Deploy_Arg_Value_IntList) isDeploy_Arg_Value_Value() {}

func (*Deploy_Arg_Value_StringValue) isDeploy_Arg_Value_Value() {}

func (*Deploy_Arg_Value_StringList) isDeploy_Arg_Value_Value() {}

func (*Deploy_Arg_Value_LongValue) isDeploy_Arg_Value_Value() {}

func (*Deploy_Arg_Value_BigInt) isDeploy_Arg_Value_Value() {}

func (*Deploy_Arg_Value_Key) isDeploy_Arg_Value_Value() {}

func (m *Deploy_Arg_Value) GetValue() isDeploy_Arg_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Deploy_Arg_Value) GetOptionalValue() *Deploy_Arg_Value {
	if x, ok := m.GetValue().(*Deploy_Arg_Value_OptionalValue); ok {
		return x.OptionalValue
	}
	return nil
}

func (m *Deploy_Arg_Value) GetBytesValue() []byte {
	if x, ok := m.GetValue().(*Deploy_Arg_Value_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (m *Deploy_Arg_Value) GetIntValue() int32 {
	if x, ok := m.GetValue().(*Deploy_Arg_Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (m *Deploy_Arg_Value) GetIntList() *state.IntList {
	if x, ok := m.GetValue().(*Deploy_Arg_Value_IntList); ok {
		return x.IntList
	}
	return nil
}

func (m *Deploy_Arg_Value) GetStringValue() string {
	if x, ok := m.GetValue().(*Deploy_Arg_Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Deploy_Arg_Value) GetStringList() *state.StringList {
	if x, ok := m.GetValue().(*Deploy_Arg_Value_StringList); ok {
		return x.StringList
	}
	return nil
}

func (m *Deploy_Arg_Value) GetLongValue() int64 {
	if x, ok := m.GetValue().(*Deploy_Arg_Value_LongValue); ok {
		return x.LongValue
	}
	return 0
}

func (m *Deploy_Arg_Value) GetBigInt() *state.BigInt {
	if x, ok := m.GetValue().(*Deploy_Arg_Value_BigInt); ok {
		return x.BigInt
	}
	return nil
}

func (m *Deploy_Arg_Value) GetKey() *state.Key {
	if x, ok := m.GetValue().(*Deploy_Arg_Value_Key); ok {
		return x.Key
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Deploy_Arg_Value) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Deploy_Arg_Value_OptionalValue)(nil),
		(*Deploy_Arg_Value_BytesValue)(nil),
		(*Deploy_Arg_Value_IntValue)(nil),
		(*Deploy_Arg_Value_IntList)(nil),
		(*Deploy_Arg_Value_StringValue)(nil),
		(*Deploy_Arg_Value_StringList)(nil),
		(*Deploy_Arg_Value_LongValue)(nil),
		(*Deploy_Arg_Value_BigInt)(nil),
		(*Deploy_Arg_Value_Key)(nil),
	}
}

// Limited block information for gossiping.
type BlockSummary struct {
	// blake2b256 hash of the `header`.
	BlockHash []byte        `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Header    *Block_Header `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	// Signature over `block_hash` using `validator_public_key`.
	Signature            *Signature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BlockSummary) Reset()         { *m = BlockSummary{} }
func (m *BlockSummary) String() string { return proto.CompactTextString(m) }
func (*BlockSummary) ProtoMessage()    {}
func (*BlockSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{3}
}

func (m *BlockSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockSummary.Unmarshal(m, b)
}
func (m *BlockSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockSummary.Marshal(b, m, deterministic)
}
func (m *BlockSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockSummary.Merge(m, src)
}
func (m *BlockSummary) XXX_Size() int {
	return xxx_messageInfo_BlockSummary.Size(m)
}
func (m *BlockSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockSummary.DiscardUnknown(m)
}

var xxx_messageInfo_BlockSummary proto.InternalMessageInfo

func (m *BlockSummary) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *BlockSummary) GetHeader() *Block_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BlockSummary) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Full block information.
type Block struct {
	// blake2b256 hash of the `header`.
	BlockHash []byte        `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Header    *Block_Header `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body      *Block_Body   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	// Signature over `block_hash`.
	Signature            *Signature `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{4}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *Block) GetHeader() *Block_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetBody() *Block_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Block) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Block_Header struct {
	ParentHashes   [][]byte               `protobuf:"bytes,1,rep,name=parent_hashes,json=parentHashes,proto3" json:"parent_hashes,omitempty"`
	Justifications []*Block_Justification `protobuf:"bytes,2,rep,name=justifications,proto3" json:"justifications,omitempty"`
	State          *Block_GlobalState     `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	// Hash of the body structure as a whole.
	BodyHash             []byte `protobuf:"bytes,4,opt,name=body_hash,json=bodyHash,proto3" json:"body_hash,omitempty"`
	Timestamp            uint64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ProtocolVersion      uint64 `protobuf:"varint,6,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	DeployCount          uint32 `protobuf:"varint,7,opt,name=deploy_count,json=deployCount,proto3" json:"deploy_count,omitempty"`
	ChainId              string `protobuf:"bytes,8,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ValidatorBlockSeqNum uint32 `protobuf:"varint,9,opt,name=validator_block_seq_num,json=validatorBlockSeqNum,proto3" json:"validator_block_seq_num,omitempty"`
	ValidatorPublicKey   []byte `protobuf:"bytes,10,opt,name=validator_public_key,json=validatorPublicKey,proto3" json:"validator_public_key,omitempty"`
	// Distance from Genesis.
	Rank                 uint64     `protobuf:"varint,11,opt,name=rank,proto3" json:"rank,omitempty"`
	RoleType             Block_Role `protobuf:"varint,12,opt,name=role_type,json=roleType,proto3,enum=io.casperlabs.casper.consensus.Block_Role" json:"role_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Block_Header) Reset()         { *m = Block_Header{} }
func (m *Block_Header) String() string { return proto.CompactTextString(m) }
func (*Block_Header) ProtoMessage()    {}
func (*Block_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{4, 0}
}

func (m *Block_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block_Header.Unmarshal(m, b)
}
func (m *Block_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block_Header.Marshal(b, m, deterministic)
}
func (m *Block_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block_Header.Merge(m, src)
}
func (m *Block_Header) XXX_Size() int {
	return xxx_messageInfo_Block_Header.Size(m)
}
func (m *Block_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Block_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Block_Header proto.InternalMessageInfo

func (m *Block_Header) GetParentHashes() [][]byte {
	if m != nil {
		return m.ParentHashes
	}
	return nil
}

func (m *Block_Header) GetJustifications() []*Block_Justification {
	if m != nil {
		return m.Justifications
	}
	return nil
}

func (m *Block_Header) GetState() *Block_GlobalState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Block_Header) GetBodyHash() []byte {
	if m != nil {
		return m.BodyHash
	}
	return nil
}

func (m *Block_Header) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block_Header) GetProtocolVersion() uint64 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *Block_Header) GetDeployCount() uint32 {
	if m != nil {
		return m.DeployCount
	}
	return 0
}

func (m *Block_Header) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *Block_Header) GetValidatorBlockSeqNum() uint32 {
	if m != nil {
		return m.ValidatorBlockSeqNum
	}
	return 0
}

func (m *Block_Header) GetValidatorPublicKey() []byte {
	if m != nil {
		return m.ValidatorPublicKey
	}
	return nil
}

func (m *Block_Header) GetRank() uint64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Block_Header) GetRoleType() Block_Role {
	if m != nil {
		return m.RoleType
	}
	return Block_BLOCK
}

type Block_Body struct {
	Deploys              []*Block_ProcessedDeploy `protobuf:"bytes,1,rep,name=deploys,proto3" json:"deploys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Block_Body) Reset()         { *m = Block_Body{} }
func (m *Block_Body) String() string { return proto.CompactTextString(m) }
func (*Block_Body) ProtoMessage()    {}
func (*Block_Body) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{4, 1}
}

func (m *Block_Body) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block_Body.Unmarshal(m, b)
}
func (m *Block_Body) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block_Body.Marshal(b, m, deterministic)
}
func (m *Block_Body) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block_Body.Merge(m, src)
}
func (m *Block_Body) XXX_Size() int {
	return xxx_messageInfo_Block_Body.Size(m)
}
func (m *Block_Body) XXX_DiscardUnknown() {
	xxx_messageInfo_Block_Body.DiscardUnknown(m)
}

var xxx_messageInfo_Block_Body proto.InternalMessageInfo

func (m *Block_Body) GetDeploys() []*Block_ProcessedDeploy {
	if m != nil {
		return m.Deploys
	}
	return nil
}

type Block_Justification struct {
	ValidatorPublicKey   []byte   `protobuf:"bytes,1,opt,name=validator_public_key,json=validatorPublicKey,proto3" json:"validator_public_key,omitempty"`
	LatestBlockHash      []byte   `protobuf:"bytes,2,opt,name=latest_block_hash,json=latestBlockHash,proto3" json:"latest_block_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block_Justification) Reset()         { *m = Block_Justification{} }
func (m *Block_Justification) String() string { return proto.CompactTextString(m) }
func (*Block_Justification) ProtoMessage()    {}
func (*Block_Justification) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{4, 2}
}

func (m *Block_Justification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block_Justification.Unmarshal(m, b)
}
func (m *Block_Justification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block_Justification.Marshal(b, m, deterministic)
}
func (m *Block_Justification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block_Justification.Merge(m, src)
}
func (m *Block_Justification) XXX_Size() int {
	return xxx_messageInfo_Block_Justification.Size(m)
}
func (m *Block_Justification) XXX_DiscardUnknown() {
	xxx_messageInfo_Block_Justification.DiscardUnknown(m)
}

var xxx_messageInfo_Block_Justification proto.InternalMessageInfo

func (m *Block_Justification) GetValidatorPublicKey() []byte {
	if m != nil {
		return m.ValidatorPublicKey
	}
	return nil
}

func (m *Block_Justification) GetLatestBlockHash() []byte {
	if m != nil {
		return m.LatestBlockHash
	}
	return nil
}

type Block_ProcessedDeploy struct {
	Deploy               *Deploy  `protobuf:"bytes,1,opt,name=deploy,proto3" json:"deploy,omitempty"`
	Cost                 uint64   `protobuf:"varint,2,opt,name=cost,proto3" json:"cost,omitempty"`
	IsError              bool     `protobuf:"varint,3,opt,name=is_error,json=isError,proto3" json:"is_error,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block_ProcessedDeploy) Reset()         { *m = Block_ProcessedDeploy{} }
func (m *Block_ProcessedDeploy) String() string { return proto.CompactTextString(m) }
func (*Block_ProcessedDeploy) ProtoMessage()    {}
func (*Block_ProcessedDeploy) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{4, 3}
}

func (m *Block_ProcessedDeploy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block_ProcessedDeploy.Unmarshal(m, b)
}
func (m *Block_ProcessedDeploy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block_ProcessedDeploy.Marshal(b, m, deterministic)
}
func (m *Block_ProcessedDeploy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block_ProcessedDeploy.Merge(m, src)
}
func (m *Block_ProcessedDeploy) XXX_Size() int {
	return xxx_messageInfo_Block_ProcessedDeploy.Size(m)
}
func (m *Block_ProcessedDeploy) XXX_DiscardUnknown() {
	xxx_messageInfo_Block_ProcessedDeploy.DiscardUnknown(m)
}

var xxx_messageInfo_Block_ProcessedDeploy proto.InternalMessageInfo

func (m *Block_ProcessedDeploy) GetDeploy() *Deploy {
	if m != nil {
		return m.Deploy
	}
	return nil
}

func (m *Block_ProcessedDeploy) GetCost() uint64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *Block_ProcessedDeploy) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

func (m *Block_ProcessedDeploy) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type Block_GlobalState struct {
	// May not correspond to a particular block if there are multiple parents.
	PreStateHash  []byte `protobuf:"bytes,1,opt,name=pre_state_hash,json=preStateHash,proto3" json:"pre_state_hash,omitempty"`
	PostStateHash []byte `protobuf:"bytes,2,opt,name=post_state_hash,json=postStateHash,proto3" json:"post_state_hash,omitempty"`
	// Included in header so lightweight nodes can follow the consensus.
	Bonds                []*Bond  `protobuf:"bytes,3,rep,name=bonds,proto3" json:"bonds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block_GlobalState) Reset()         { *m = Block_GlobalState{} }
func (m *Block_GlobalState) String() string { return proto.CompactTextString(m) }
func (*Block_GlobalState) ProtoMessage()    {}
func (*Block_GlobalState) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{4, 4}
}

func (m *Block_GlobalState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block_GlobalState.Unmarshal(m, b)
}
func (m *Block_GlobalState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block_GlobalState.Marshal(b, m, deterministic)
}
func (m *Block_GlobalState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block_GlobalState.Merge(m, src)
}
func (m *Block_GlobalState) XXX_Size() int {
	return xxx_messageInfo_Block_GlobalState.Size(m)
}
func (m *Block_GlobalState) XXX_DiscardUnknown() {
	xxx_messageInfo_Block_GlobalState.DiscardUnknown(m)
}

var xxx_messageInfo_Block_GlobalState proto.InternalMessageInfo

func (m *Block_GlobalState) GetPreStateHash() []byte {
	if m != nil {
		return m.PreStateHash
	}
	return nil
}

func (m *Block_GlobalState) GetPostStateHash() []byte {
	if m != nil {
		return m.PostStateHash
	}
	return nil
}

func (m *Block_GlobalState) GetBonds() []*Bond {
	if m != nil {
		return m.Bonds
	}
	return nil
}

type Bond struct {
	ValidatorPublicKey   []byte   `protobuf:"bytes,1,opt,name=validator_public_key,json=validatorPublicKey,proto3" json:"validator_public_key,omitempty"`
	Stake                uint64   `protobuf:"varint,2,opt,name=stake,proto3" json:"stake,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bond) Reset()         { *m = Bond{} }
func (m *Bond) String() string { return proto.CompactTextString(m) }
func (*Bond) ProtoMessage()    {}
func (*Bond) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{5}
}

func (m *Bond) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bond.Unmarshal(m, b)
}
func (m *Bond) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bond.Marshal(b, m, deterministic)
}
func (m *Bond) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bond.Merge(m, src)
}
func (m *Bond) XXX_Size() int {
	return xxx_messageInfo_Bond.Size(m)
}
func (m *Bond) XXX_DiscardUnknown() {
	xxx_messageInfo_Bond.DiscardUnknown(m)
}

var xxx_messageInfo_Bond proto.InternalMessageInfo

func (m *Bond) GetValidatorPublicKey() []byte {
	if m != nil {
		return m.ValidatorPublicKey
	}
	return nil
}

func (m *Bond) GetStake() uint64 {
	if m != nil {
		return m.Stake
	}
	return 0
}

// To allow nodes in the beginning to verify that they are joining the right network,
// while there is no DAG to look at, they disseminate approvals for the Genesis candidate
// until it gathers enough support for individual nodes to pass their thresholds and
// transition to processing blocks and deploys.
// Nodes should persist this value to be able to retrieve it later even if in case all nodes are restarted.
type GenesisCandidate struct {
	// The hash of the Genesis block, which should reflect the effects of executing
	// the block that was compiled according to the published specification.
	// The Genesis block is special in that it is not signed by any one validator:
	// all the signatures are going to be missing, all the public key fields empty,
	// including those that would sign the deploys in the body.
	BlockHash []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// Approvals from bonded validators with signatures over the `block_hash`.
	Approvals            []*Approval `protobuf:"bytes,2,rep,name=approvals,proto3" json:"approvals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GenesisCandidate) Reset()         { *m = GenesisCandidate{} }
func (m *GenesisCandidate) String() string { return proto.CompactTextString(m) }
func (*GenesisCandidate) ProtoMessage()    {}
func (*GenesisCandidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ef60ffad3b483db, []int{6}
}

func (m *GenesisCandidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisCandidate.Unmarshal(m, b)
}
func (m *GenesisCandidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisCandidate.Marshal(b, m, deterministic)
}
func (m *GenesisCandidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisCandidate.Merge(m, src)
}
func (m *GenesisCandidate) XXX_Size() int {
	return xxx_messageInfo_GenesisCandidate.Size(m)
}
func (m *GenesisCandidate) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisCandidate.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisCandidate proto.InternalMessageInfo

func (m *GenesisCandidate) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *GenesisCandidate) GetApprovals() []*Approval {
	if m != nil {
		return m.Approvals
	}
	return nil
}

func init() {
	proto.RegisterEnum("io.casperlabs.casper.consensus.Block_Role", Block_Role_name, Block_Role_value)
	proto.RegisterType((*Signature)(nil), "io.casperlabs.casper.consensus.Signature")
	proto.RegisterType((*Approval)(nil), "io.casperlabs.casper.consensus.Approval")
	proto.RegisterType((*Deploy)(nil), "io.casperlabs.casper.consensus.Deploy")
	proto.RegisterType((*Deploy_Header)(nil), "io.casperlabs.casper.consensus.Deploy.Header")
	proto.RegisterType((*Deploy_Body)(nil), "io.casperlabs.casper.consensus.Deploy.Body")
	proto.RegisterType((*Deploy_Code)(nil), "io.casperlabs.casper.consensus.Deploy.Code")
	proto.RegisterType((*Deploy_Arg)(nil), "io.casperlabs.casper.consensus.Deploy.Arg")
	proto.RegisterType((*Deploy_Arg_Value)(nil), "io.casperlabs.casper.consensus.Deploy.Arg.Value")
	proto.RegisterType((*BlockSummary)(nil), "io.casperlabs.casper.consensus.BlockSummary")
	proto.RegisterType((*Block)(nil), "io.casperlabs.casper.consensus.Block")
	proto.RegisterType((*Block_Header)(nil), "io.casperlabs.casper.consensus.Block.Header")
	proto.RegisterType((*Block_Body)(nil), "io.casperlabs.casper.consensus.Block.Body")
	proto.RegisterType((*Block_Justification)(nil), "io.casperlabs.casper.consensus.Block.Justification")
	proto.RegisterType((*Block_ProcessedDeploy)(nil), "io.casperlabs.casper.consensus.Block.ProcessedDeploy")
	proto.RegisterType((*Block_GlobalState)(nil), "io.casperlabs.casper.consensus.Block.GlobalState")
	proto.RegisterType((*Bond)(nil), "io.casperlabs.casper.consensus.Bond")
	proto.RegisterType((*GenesisCandidate)(nil), "io.casperlabs.casper.consensus.GenesisCandidate")
}

func init() {
	proto.RegisterFile("io/casperlabs/casper/consensus/consensus.proto", fileDescriptor_1ef60ffad3b483db)
}

var fileDescriptor_1ef60ffad3b483db = []byte{
	// 1314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xdb, 0x8e, 0x1b, 0x35,
	0x18, 0xce, 0x34, 0x93, 0xd3, 0x9f, 0x64, 0x37, 0x35, 0x95, 0x08, 0x81, 0xd2, 0x6d, 0x5a, 0x55,
	0x69, 0xe9, 0x66, 0x4b, 0xab, 0xde, 0x20, 0x51, 0xb4, 0xd9, 0xb6, 0x9b, 0xb6, 0x4b, 0x5b, 0x79,
	0x4b, 0x2b, 0xe0, 0x62, 0xe4, 0x99, 0x71, 0x27, 0x66, 0x27, 0xe3, 0xa9, 0xed, 0x59, 0x94, 0x3b,
	0x24, 0x5e, 0x01, 0x89, 0x1b, 0x6e, 0x79, 0x0b, 0xb8, 0xe4, 0x35, 0x78, 0x08, 0x9e, 0x00, 0xd9,
	0x9e, 0x9c, 0x16, 0xb5, 0x3b, 0x2c, 0x12, 0x37, 0x91, 0xfd, 0xd9, 0xff, 0xf7, 0x1f, 0xfc, 0x1f,
	0x26, 0x30, 0x64, 0x7c, 0x27, 0x20, 0x32, 0xa5, 0x22, 0x26, 0xbe, 0xcc, 0x97, 0x3b, 0x01, 0x4f,
	0x24, 0x4d, 0x64, 0x26, 0x97, 0xab, 0x61, 0x2a, 0xb8, 0xe2, 0xe8, 0x63, 0xc6, 0x87, 0xcb, 0xfb,
	0xf9, 0x72, 0xb8, 0xb8, 0xd5, 0xbb, 0x75, 0x0a, 0x9f, 0x54, 0x44, 0x51, 0xfb, 0x6b, 0x19, 0xfb,
	0x23, 0x68, 0x1c, 0xb2, 0x28, 0x21, 0x2a, 0x13, 0x14, 0x5d, 0x81, 0xb6, 0x64, 0x91, 0x47, 0xe2,
	0x88, 0x0b, 0xa6, 0x26, 0xd3, 0xae, 0xb3, 0xe5, 0x0c, 0x1a, 0xb8, 0x25, 0x59, 0xb4, 0x3b, 0xc7,
	0x50, 0x07, 0xca, 0x92, 0x45, 0xdd, 0x73, 0x5b, 0xce, 0xa0, 0x85, 0xf5, 0xb2, 0xff, 0xa3, 0x03,
	0xf5, 0xdd, 0x34, 0x15, 0xfc, 0x98, 0xc4, 0x68, 0x08, 0xef, 0x11, 0xb3, 0xa6, 0xc2, 0x4b, 0x33,
	0x3f, 0x66, 0x81, 0x77, 0x44, 0x67, 0x86, 0xa9, 0x85, 0xcf, 0xcf, 0x8f, 0x9e, 0x9b, 0x93, 0x27,
	0x74, 0x86, 0xf6, 0xa1, 0x21, 0xe7, 0x06, 0x18, 0xd2, 0xe6, 0xed, 0xeb, 0xc3, 0x77, 0xbb, 0x39,
	0x5c, 0x58, 0x8c, 0x97, 0xb2, 0xfd, 0xbf, 0x00, 0xaa, 0xf7, 0x69, 0x1a, 0xf3, 0x19, 0xba, 0x04,
	0xcd, 0xd0, 0xac, 0xbc, 0x09, 0x91, 0x93, 0x5c, 0x37, 0x58, 0x68, 0x4c, 0xe4, 0x04, 0x3d, 0x80,
	0xea, 0x84, 0x92, 0x90, 0x8a, 0x5c, 0xe3, 0xf6, 0x69, 0x1a, 0x2d, 0xf1, 0x70, 0x6c, 0x84, 0x70,
	0x2e, 0x8c, 0xbe, 0x00, 0xd7, 0xe7, 0xe1, 0xac, 0x5b, 0x36, 0x24, 0x9f, 0x14, 0x24, 0x19, 0xf1,
	0x70, 0x86, 0x8d, 0x20, 0x7a, 0x08, 0x0d, 0x92, 0x07, 0x4e, 0x76, 0xdd, 0xad, 0xf2, 0xa0, 0x79,
	0x7b, 0x70, 0x1a, 0xcb, 0x3c, 0xd2, 0x78, 0x29, 0xda, 0xfb, 0xc9, 0x81, 0xaa, 0xb5, 0x0d, 0xdd,
	0x04, 0x44, 0x82, 0x80, 0x67, 0x89, 0xfa, 0x67, 0xf8, 0x3b, 0xf9, 0xc9, 0x32, 0xfa, 0x1f, 0x41,
	0x43, 0xb1, 0x29, 0x95, 0x8a, 0x4c, 0x53, 0xe3, 0x86, 0x8b, 0x97, 0x00, 0xfa, 0x10, 0x1a, 0x11,
	0x91, 0x5e, 0x2a, 0x58, 0x40, 0xbb, 0xae, 0x39, 0xad, 0x47, 0x44, 0x3e, 0xd7, 0x7b, 0x7d, 0xa8,
	0x7d, 0xb0, 0x21, 0xae, 0x18, 0xfe, 0xba, 0x06, 0x74, 0x80, 0x1f, 0xbb, 0xf5, 0x73, 0x9d, 0xb2,
	0x36, 0xcb, 0xd5, 0xde, 0xa2, 0x07, 0x50, 0x93, 0x54, 0x4a, 0xc6, 0x13, 0x63, 0x49, 0xf1, 0x58,
	0xed, 0xf1, 0x90, 0xe2, 0xb9, 0xac, 0xa6, 0x49, 0xc9, 0x6c, 0x4a, 0x13, 0x95, 0xbf, 0xdb, 0xbf,
	0xa3, 0xc9, 0x65, 0x7b, 0x7f, 0x38, 0xe0, 0x6a, 0x04, 0x5d, 0x00, 0xf7, 0x7b, 0x22, 0x6d, 0x9a,
	0xb7, 0xc6, 0x25, 0x6c, 0x76, 0x1a, 0x35, 0x3e, 0x95, 0xe7, 0xa8, 0xde, 0x69, 0x34, 0x21, 0x53,
	0x1b, 0x86, 0x86, 0x46, 0xf5, 0x4e, 0xa3, 0x99, 0xa0, 0xaf, 0xad, 0xff, 0x1a, 0xd5, 0x3b, 0xf4,
	0x01, 0xd4, 0x89, 0xcf, 0x3c, 0x22, 0x22, 0x99, 0xd7, 0x49, 0x8d, 0xf8, 0x6c, 0x57, 0x44, 0x12,
	0xdd, 0x03, 0xd7, 0xc0, 0x55, 0xf3, 0xd8, 0x37, 0x0a, 0xda, 0xbf, 0x2b, 0x22, 0x6c, 0xe4, 0x46,
	0x00, 0xf5, 0x80, 0x27, 0x4a, 0x90, 0x40, 0xf5, 0x7e, 0xa8, 0x40, 0x79, 0x57, 0x44, 0x08, 0xe5,
	0xa6, 0xd9, 0x6a, 0xb5, 0x86, 0x3d, 0x84, 0xca, 0x31, 0x89, 0xb3, 0x79, 0x49, 0xdd, 0x2a, 0xae,
	0x68, 0xf8, 0x52, 0xcb, 0x61, 0x2b, 0xde, 0xfb, 0xc5, 0x85, 0x8a, 0x01, 0xd0, 0xd7, 0xb0, 0xc1,
	0x53, 0xc5, 0x78, 0x42, 0x62, 0xcf, 0x52, 0x3b, 0x67, 0xa3, 0x1e, 0x97, 0x70, 0x7b, 0xce, 0x64,
	0xa9, 0x2f, 0x43, 0xd3, 0x9f, 0x29, 0x2a, 0xbd, 0xa5, 0xc9, 0x3a, 0x98, 0x60, 0x40, 0x7b, 0xe5,
	0x22, 0x34, 0x58, 0xa2, 0xf2, 0x0b, 0xfa, 0x65, 0x2a, 0xe3, 0x12, 0xae, 0xb3, 0x44, 0xd9, 0xe3,
	0xc7, 0xa0, 0xd7, 0x5e, 0xcc, 0xa4, 0x32, 0x2f, 0x54, 0xa0, 0xa4, 0x6d, 0x17, 0x7c, 0x94, 0xa8,
	0x03, 0x26, 0xd5, 0xb8, 0x84, 0x6b, 0xcc, 0x2e, 0xd1, 0x15, 0x68, 0x49, 0x25, 0x58, 0x12, 0xe5,
	0xda, 0x2a, 0xf9, 0x8b, 0x37, 0x2d, 0x6a, 0x15, 0x1e, 0x42, 0xbe, 0xb5, 0x3a, 0xab, 0xc5, 0x42,
	0x61, 0x75, 0x1e, 0x1a, 0xc1, 0x5c, 0x2d, 0xc8, 0xc5, 0x0e, 0x5d, 0x02, 0x88, 0xf9, 0x42, 0x6f,
	0x6d, 0xcb, 0x19, 0x94, 0xc7, 0x25, 0xdc, 0xd0, 0x98, 0xd5, 0xba, 0x0f, 0x35, 0x9f, 0x45, 0x1e,
	0x4b, 0x54, 0xb7, 0x6e, 0x34, 0xde, 0x2c, 0xa6, 0x71, 0xc4, 0xa2, 0x47, 0x89, 0xd6, 0x56, 0xf5,
	0xcd, 0x0a, 0x7d, 0x0e, 0x65, 0xdd, 0x16, 0x1a, 0xc5, 0xfa, 0xad, 0x25, 0x79, 0x42, 0x67, 0xe3,
	0x12, 0xd6, 0x72, 0xa3, 0x5a, 0x9e, 0x5d, 0xfd, 0xdf, 0x1c, 0x68, 0x8d, 0x62, 0x1e, 0x1c, 0x1d,
	0x66, 0xd3, 0x29, 0x11, 0x33, 0x74, 0x11, 0xc0, 0xd7, 0xfb, 0xd5, 0xce, 0xdb, 0x30, 0x88, 0x69,
	0xbc, 0xf7, 0x4f, 0x34, 0xde, 0x53, 0xed, 0x37, 0xe4, 0x27, 0xfb, 0xee, 0xda, 0xcc, 0x28, 0xff,
	0x87, 0x99, 0xf1, 0x27, 0x40, 0xc5, 0x68, 0xf8, 0x7f, 0xec, 0xbe, 0xb7, 0x36, 0x2f, 0x6e, 0x14,
	0xe3, 0x58, 0x19, 0x17, 0x6b, 0x7e, 0xbb, 0x67, 0xf7, 0xbb, 0xf7, 0xbb, 0xbb, 0x98, 0x17, 0x57,
	0xa0, 0x9d, 0x12, 0x41, 0x13, 0x65, 0x3c, 0xa7, 0xb2, 0xeb, 0x6c, 0x95, 0x07, 0x2d, 0xdc, 0xb2,
	0xe0, 0xd8, 0x60, 0xe8, 0x5b, 0xd8, 0xf8, 0x2e, 0x93, 0x8a, 0xbd, 0x66, 0x01, 0xd1, 0x85, 0xab,
	0xdb, 0x9a, 0xee, 0x5f, 0x77, 0x8a, 0xb9, 0xf0, 0x78, 0x55, 0x16, 0x9f, 0xa0, 0x42, 0xfb, 0x50,
	0x31, 0x09, 0x96, 0x87, 0xe5, 0xd3, 0x62, 0x9c, 0xfb, 0x31, 0xf7, 0x49, 0x7c, 0xa8, 0x05, 0xb1,
	0x95, 0x5f, 0x9f, 0x48, 0xee, 0xfa, 0x44, 0x5a, 0x9f, 0x74, 0x95, 0x93, 0x93, 0xee, 0x3a, 0x74,
	0xcc, 0xf7, 0x50, 0xc0, 0x63, 0xef, 0x98, 0x0a, 0x33, 0xa9, 0xaa, 0xe6, 0xd2, 0xe6, 0x1c, 0x7f,
	0x69, 0x61, 0x74, 0x19, 0x5a, 0xf9, 0xc7, 0x85, 0x99, 0xa5, 0xa6, 0x4c, 0xdb, 0x38, 0xff, 0xe0,
	0xd8, 0xd3, 0x90, 0xee, 0xff, 0xc1, 0x84, 0xb0, 0xc4, 0x63, 0xa1, 0xa9, 0xd3, 0x06, 0xae, 0x99,
	0xfd, 0xa3, 0x10, 0xdd, 0x85, 0xf7, 0x8f, 0x49, 0xcc, 0x42, 0xa2, 0xb8, 0xf0, 0x6c, 0xc6, 0x49,
	0xfa, 0xc6, 0x4b, 0xb2, 0xa9, 0x29, 0xc6, 0x36, 0xbe, 0xb0, 0x38, 0xb6, 0x75, 0x45, 0xdf, 0x3c,
	0xcd, 0xa6, 0xe8, 0x16, 0x2c, 0xf1, 0xd5, 0xb9, 0x0e, 0xc6, 0x4b, 0xb4, 0x38, 0x5b, 0x4e, 0x76,
	0x04, 0xae, 0x20, 0xc9, 0x51, 0xb7, 0x69, 0xbc, 0x30, 0x6b, 0x9d, 0x3f, 0x82, 0xc7, 0xd4, 0x53,
	0xb3, 0x94, 0x76, 0x5b, 0x5b, 0xce, 0x60, 0xa3, 0x68, 0x12, 0x62, 0x1e, 0x53, 0x5c, 0xd7, 0xc2,
	0x2f, 0x66, 0x29, 0xed, 0xbd, 0xca, 0xe7, 0xfa, 0x33, 0xa8, 0x59, 0xbf, 0x6d, 0xda, 0x34, 0x6f,
	0xdf, 0x2d, 0x46, 0xf7, 0x5c, 0xf0, 0x80, 0x4a, 0x49, 0x43, 0x3b, 0x1b, 0xf0, 0x9c, 0xa5, 0x37,
	0x85, 0xf6, 0x5a, 0xb2, 0xbc, 0xd5, 0x71, 0xe7, 0xad, 0x8e, 0xdf, 0x80, 0xf3, 0x31, 0x51, 0x54,
	0x2a, 0x6f, 0xa5, 0xa0, 0xed, 0x14, 0xde, 0xb4, 0x07, 0xa3, 0x79, 0x59, 0xf7, 0x7e, 0x75, 0x60,
	0xf3, 0x84, 0x2d, 0xe8, 0x1e, 0x54, 0xad, 0x35, 0xf9, 0x7c, 0xbb, 0x56, 0x6c, 0xbe, 0xe1, 0x5c,
	0x4a, 0x07, 0x3e, 0xe0, 0xd2, 0x7e, 0xa1, 0xb8, 0xd8, 0xac, 0x75, 0x42, 0x30, 0xe9, 0x51, 0x21,
	0xb8, 0x30, 0x59, 0x5e, 0xc7, 0x35, 0x26, 0x1f, 0xe8, 0xad, 0xae, 0x3f, 0x83, 0x7b, 0x53, 0x2a,
	0x25, 0x89, 0xf2, 0x0f, 0x0c, 0xdc, 0x32, 0xe0, 0x97, 0x16, 0xeb, 0xfd, 0xec, 0x40, 0x73, 0x25,
	0xe1, 0xd1, 0x55, 0xd8, 0x48, 0x05, 0xf5, 0x4c, 0xda, 0xaf, 0x76, 0xac, 0x56, 0x2a, 0xa8, 0xb9,
	0x61, 0x52, 0xfe, 0x1a, 0x6c, 0xa6, 0x5c, 0xaa, 0xd5, 0x6b, 0x36, 0x0e, 0x6d, 0x0d, 0x2f, 0xef,
	0x7d, 0x06, 0x15, 0x9f, 0x27, 0xa1, 0xec, 0x96, 0xcd, 0x1b, 0x5e, 0x3d, 0xf5, 0x0d, 0x79, 0x12,
	0x62, 0x2b, 0xd2, 0xbf, 0x08, 0xae, 0xce, 0x0d, 0xd4, 0x80, 0xca, 0xe8, 0xe0, 0xd9, 0xde, 0x93,
	0x4e, 0x09, 0x01, 0x54, 0x47, 0xbb, 0x07, 0x07, 0xcf, 0x5e, 0x74, 0x9c, 0xfe, 0x53, 0x9d, 0x28,
	0x49, 0x78, 0x86, 0x67, 0xbc, 0x60, 0xba, 0xc2, 0x11, 0xcd, 0xe3, 0x68, 0x37, 0xfd, 0x19, 0x74,
	0xf6, 0x69, 0x42, 0x25, 0x93, 0x7b, 0x24, 0x09, 0xb5, 0x0c, 0x3d, 0xad, 0x75, 0xaf, 0x7d, 0x63,
	0x9f, 0x3b, 0xf3, 0x37, 0xf6, 0xe8, 0xd5, 0x37, 0x5f, 0x45, 0x4c, 0x4d, 0x32, 0x7f, 0x18, 0xf0,
	0xe9, 0xce, 0x24, 0x24, 0xc1, 0xf6, 0xda, 0xbf, 0xad, 0x6d, 0x4a, 0xb7, 0x23, 0x91, 0x06, 0xdb,
	0x11, 0xdf, 0xce, 0x14, 0x8b, 0x77, 0x4c, 0xe3, 0xf0, 0xb3, 0xd7, 0x3b, 0xef, 0xfe, 0x53, 0xe6,
	0x57, 0xcd, 0xc5, 0x3b, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x77, 0x68, 0xad, 0x0d, 0x0e,
	0x00, 0x00,
}
